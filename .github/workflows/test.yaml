name: Test Submodule

on:
    push:
# on:
#   pull_request:
#     branches:
#       - dev
#     types:
#       - opened    
#       - closed

env: 
#  ENVIRONMENT: environments/dev
  TERRAFORM_VERSION: 1.7.3
  TFLINT_VERSION: v0.50.3




jobs:
  BackEnd_CI:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout  
      uses: actions/checkout@v4
      with:
        submodules: recursive

# ----------------------------------------
    - name: test and upload test result
      run: |
        mkdir result
        touch results/sample.txt
        date >> results/sample.txt
      continue-on-error: true
#        {run your test script  --junit-xml results/sample.xml } 

    - name: Upload Unit Test Results
      if: ${{ always() }}
      uses: actions/upload-artifact@v4
      with:
        name: Unit Test Results
        path: results/*.txt
        retention-days: 5
# ----------------------------------------

# configure AWS credential

# AWS credential
#     - name: Login to Amazon ECR
#       id: login-ecr
#       uses: aws-actions/amazon-ecr-login@v2

# Docker build & test
    # - name: Test Build, tag, and push image to Amazon ECR
    #   id: build-image
    #   env:
    #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #     IMAGE_TAG: ${{ github.sha }}
    #   run: |
    #     # Build a docker container and
    #     # push it to ECR so that it can
    #     # be deployed to ECS.
    #     docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
    #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    #     echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    # - name: Fill in the new image ID in the Amazon ECS task definition
    #   id: task-def
    #   uses: aws-actions/amazon-ecs-render-task-definition@c804dfbdd57f713b6c079302a4c01db7017a36fc
    #   with:
    #     task-definition: ${{ env.ECS_TASK_DEFINITION }}
    #     container-name: ${{ env.CONTAINER_NAME }}
    #     image: ${{ steps.build-image.outputs.image }}

    # - name: Deploy Amazon ECS task definition
    #   uses: aws-actions/amazon-ecs-deploy-task-definition@df9643053eda01f169e64a0e60233aacca83799a
    #   with:
    #     task-definition: ${{ steps.task-def.outputs.task-definition }}
    #     service: ${{ env.ECS_SERVICE }}
    #     cluster: ${{ env.ECS_CLUSTER }}
    #     wait-for-service-stability: true